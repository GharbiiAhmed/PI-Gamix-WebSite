{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aghx0\\\\OneDrive\\\\Documents\\\\siteweb\\\\gameInterface\\\\src\\\\pages\\\\client\\\\CheckoutForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CheckoutForm = ({\n  skinId,\n  skinName,\n  skinPrice\n}) => {\n  _s();\n  const stripe = useStripe();\n  const elements = useElements();\n  const [loading, setLoading] = useState(false);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setLoading(true);\n    if (!stripe || !elements) {\n      // Stripe.js has not yet loaded.\n      // Make sure to disable form submission until Stripe.js has loaded.\n      return;\n    }\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: elements.getElement(CardElement)\n    });\n    if (error) {\n      console.log('[error]', error);\n      setLoading(false);\n    } else {\n      console.log('[PaymentMethod]', paymentMethod);\n      // Send paymentMethod.id to your server to confirm the payment\n      try {\n        const response = await fetch(`http://localhost:3000/skins/buySkins/${skinId}`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            skinName: skinName,\n            skinPrice: skinPrice,\n            paymentMethodId: paymentMethod.id\n          })\n        });\n        const data = await response.json();\n        console.log(data);\n        // Handle success or failure on your frontend\n      } catch (error) {\n        console.error('Error:', error);\n      } finally {\n        setLoading(false);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: !stripe || loading,\n      children: loading ? 'Processing...' : 'Pay'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(CheckoutForm, \"GyjitGMhIec78XX8Ioi2UT7LwoQ=\", false, function () {\n  return [useStripe, useElements];\n});\n_c = CheckoutForm;\nexport default CheckoutForm;\nvar _c;\n$RefreshReg$(_c, \"CheckoutForm\");","map":{"version":3,"names":["React","useState","CardElement","useStripe","useElements","jsxDEV","_jsxDEV","CheckoutForm","skinId","skinName","skinPrice","_s","stripe","elements","loading","setLoading","handleSubmit","event","preventDefault","error","paymentMethod","createPaymentMethod","type","card","getElement","console","log","response","fetch","method","headers","body","JSON","stringify","paymentMethodId","id","data","json","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","disabled","_c","$RefreshReg$"],"sources":["C:/Users/aghx0/OneDrive/Documents/siteweb/gameInterface/src/pages/client/CheckoutForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\r\n\r\nconst CheckoutForm = ({ skinId, skinName, skinPrice }) => {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setLoading(true);\r\n\r\n    if (!stripe || !elements) {\r\n      // Stripe.js has not yet loaded.\r\n      // Make sure to disable form submission until Stripe.js has loaded.\r\n      return;\r\n    }\r\n\r\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n      type: 'card',\r\n      card: elements.getElement(CardElement),\r\n    });\r\n\r\n    if (error) {\r\n      console.log('[error]', error);\r\n      setLoading(false);\r\n    } else {\r\n      console.log('[PaymentMethod]', paymentMethod);\r\n      // Send paymentMethod.id to your server to confirm the payment\r\n      try {\r\n        const response = await fetch(`http://localhost:3000/skins/buySkins/${skinId}`, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n            skinName: skinName,\r\n            skinPrice: skinPrice,\r\n            paymentMethodId: paymentMethod.id,\r\n          }),\r\n        });\r\n        const data = await response.json();\r\n        console.log(data);\r\n        // Handle success or failure on your frontend\r\n      } catch (error) {\r\n        console.error('Error:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <CardElement />\r\n      <button type=\"submit\" disabled={!stripe || loading}>\r\n        {loading ? 'Processing...' : 'Pay'}\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CheckoutForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,SAAS,EAAEC,WAAW,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,YAAY,GAAGA,CAAC;EAAEC,MAAM;EAAEC,QAAQ;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACxD,MAAMC,MAAM,GAAGT,SAAS,CAAC,CAAC;EAC1B,MAAMU,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMe,YAAY,GAAG,MAAOC,KAAK,IAAK;IACpCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtBH,UAAU,CAAC,IAAI,CAAC;IAEhB,IAAI,CAACH,MAAM,IAAI,CAACC,QAAQ,EAAE;MACxB;MACA;MACA;IACF;IAEA,MAAM;MAAEM,KAAK;MAAEC;IAAc,CAAC,GAAG,MAAMR,MAAM,CAACS,mBAAmB,CAAC;MAChEC,IAAI,EAAE,MAAM;MACZC,IAAI,EAAEV,QAAQ,CAACW,UAAU,CAACtB,WAAW;IACvC,CAAC,CAAC;IAEF,IAAIiB,KAAK,EAAE;MACTM,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEP,KAAK,CAAC;MAC7BJ,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,MAAM;MACLU,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEN,aAAa,CAAC;MAC7C;MACA,IAAI;QACF,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAE,wCAAuCpB,MAAO,EAAC,EAAE;UAC7EqB,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACnBxB,QAAQ,EAAEA,QAAQ;YAClBC,SAAS,EAAEA,SAAS;YACpBwB,eAAe,EAAEd,aAAa,CAACe;UACjC,CAAC;QACH,CAAC,CAAC;QACF,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;QAClCZ,OAAO,CAACC,GAAG,CAACU,IAAI,CAAC;QACjB;MACF,CAAC,CAAC,OAAOjB,KAAK,EAAE;QACdM,OAAO,CAACN,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAChC,CAAC,SAAS;QACRJ,UAAU,CAAC,KAAK,CAAC;MACnB;IACF;EACF,CAAC;EAED,oBACET,OAAA;IAAMgC,QAAQ,EAAEtB,YAAa;IAAAuB,QAAA,gBAC3BjC,OAAA,CAACJ,WAAW;MAAAsC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACfrC,OAAA;MAAQgB,IAAI,EAAC,QAAQ;MAACsB,QAAQ,EAAE,CAAChC,MAAM,IAAIE,OAAQ;MAAAyB,QAAA,EAChDzB,OAAO,GAAG,eAAe,GAAG;IAAK;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEX,CAAC;AAAChC,EAAA,CAzDIJ,YAAY;EAAA,QACDJ,SAAS,EACPC,WAAW;AAAA;AAAAyC,EAAA,GAFxBtC,YAAY;AA2DlB,eAAeA,YAAY;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}